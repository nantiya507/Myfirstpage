/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "https://static.parastorage.com/services/media-frame/1.26.0/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/*!*********************************************!*\
  !*** ../node_modules/is-plain-obj/index.js ***!
  \*********************************************/
/*! no static exports found */
/*! all exports used */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = value => {
	if (Object.prototype.toString.call(value) !== '[object Object]') {
		return false;
	}

	const prototype = Object.getPrototypeOf(value);
	return prototype === null || prototype === Object.getPrototypeOf({});
};


/***/ }),
/* 1 */
/*!*******************************!*\
  !*** ./index.ts + 14 modules ***!
  \*******************************/
/*! exports provided: mediaFrame */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./Logger/LoggerImplQueued.ts
var LoggerImplQueued = /** @class */ (function () {
    function LoggerImplQueued() {
        this.queue = [];
    }
    LoggerImplQueued.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.queue.push({ type: 'log', args: args });
    };
    LoggerImplQueued.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.queue.push({ type: 'info', args: args });
    };
    LoggerImplQueued.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.queue.push({ type: 'warn', args: args });
    };
    LoggerImplQueued.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.queue.push({ type: 'error', args: args });
    };
    LoggerImplQueued.prototype.drain = function (dest) {
        this.queue.forEach(function (_a) {
            var type = _a.type, args = _a.args;
            dest[type].apply(dest, args);
        });
        this.queue = [];
    };
    return LoggerImplQueued;
}());


// CONCATENATED MODULE: ./Logger/Logger.ts
/* tslint:disable:no-console */

var KeyL = 76;
var Logger_Logger = /** @class */ (function () {
    function Logger(serviceName) {
        var _this = this;
        this.log = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = _this.impl).log.apply(_a, [_this.serviceName].concat(args));
        };
        this.info = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = _this.impl).info.apply(_a, [_this.serviceName].concat(args));
        };
        this.warn = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = _this.impl).warn.apply(_a, [_this.serviceName].concat(args));
        };
        this.error = function () {
            var _a;
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            (_a = _this.impl).error.apply(_a, [_this.serviceName].concat(args));
        };
        this.switchToRealtime = function () {
            _this.impl = console;
        };
        this.serviceName = serviceName;
        Logger.instances.push(this);
        this.impl = Logger.queueImpl;
    }
    Logger.switchAllToRealtime = function () {
        Logger.queueImpl.drain(console);
        Logger.instances.forEach(function (logger) { return logger.switchToRealtime(); });
    };
    Logger.instances = [];
    Logger.queueImpl = new LoggerImplQueued();
    return Logger;
}());

// Show log when CTRL+ALT+SHIFT+L was pressed
var enableDebugHandler = function (event) {
    var ctrlKey = event.ctrlKey, shiftKey = event.shiftKey, metaKey = event.metaKey, altKey = event.altKey, keyCode = event.keyCode;
    var doesMatch = [ctrlKey || metaKey, altKey, shiftKey, keyCode === KeyL].every(Boolean);
    if (!doesMatch) {
        return;
    }
    Logger_Logger.switchAllToRealtime();
    detachEnableDebugHandler();
};
var attachEnableDebugHandler = function () { return window.addEventListener('keydown', enableDebugHandler, false); };
var detachEnableDebugHandler = function () { return window.removeEventListener('keydown', enableDebugHandler, false); };

// CONCATENATED MODULE: ./Logger/index.ts


// CONCATENATED MODULE: ./WindowMessenger/WindowMessenger.ts

var WindowMessenger_WindowMessenger = /** @class */ (function () {
    function WindowMessenger(targetWindow, logger) {
        if (logger === void 0) { logger = new Logger_Logger('WindowMessenger'); }
        this.handlerDescriptions = [];
        this.logger = logger;
        this.targetWindow = targetWindow;
        window.addEventListener('message', this.handleMessage.bind(this), false);
    }
    WindowMessenger.prototype.setTarget = function (target) {
        this.targetWindow = target;
    };
    WindowMessenger.prototype.on = function (event, fn) {
        this.handlerDescriptions.push({
            event: event,
            fn: fn,
            once: false,
        });
    };
    WindowMessenger.prototype.one = function (event, fn) {
        this.handlerDescriptions.push({
            event: event,
            fn: fn,
            once: true,
        });
    };
    WindowMessenger.prototype.off = function (event, fn) {
        this.handlerDescriptions = this.handlerDescriptions.filter(function (handler) { return !(handler.event === event && (handler.fn === fn || !fn)); });
    };
    WindowMessenger.prototype.emit = function (event, data) {
        if (data === void 0) { data = null; }
        this.logger.log('postMessage emitted', event, data);
        if (!this.targetWindow) {
            throw new Error('target window should be defined');
        }
        this.targetWindow.postMessage(JSON.stringify({ data: data, event: event }), '*');
    };
    WindowMessenger.prototype.handleMessage = function (event) {
        if (event.source !== this.targetWindow) {
            return;
        }
        var data = this.parseMessageData(event.data);
        if (data === null) {
            return;
        }
        this.logger.log('postMessage received', data);
        this.handlerDescriptions
            .filter(function (observer) { return observer.event === data.event; })
            .forEach(this.runObserver(event, data.data));
    };
    WindowMessenger.prototype.runObserver = function (event, data) {
        var _this = this;
        return function (handlerDescription) {
            handlerDescription.fn.call(event, data);
            if (handlerDescription.once) {
                _this.off(handlerDescription.event, handlerDescription.fn);
            }
        };
    };
    WindowMessenger.prototype.parseMessageData = function (input) {
        try {
            return JSON.parse(input);
        }
        catch (ex) {
            return null;
        }
    };
    return WindowMessenger;
}());


// CONCATENATED MODULE: ./WindowMessenger/index.ts


// CONCATENATED MODULE: ./IFrameManager/IFrameManager.ts

function normalize(url) {
    var a = document.createElement('a');
    a.href = url;
    return a.href;
}
var buildIframeUrl = function (settings) {
    return normalize(settings.mediaGalleryBaseHost + "index.html?locale=" + settings.i18nCode);
};
function resolveAfterTimeout(promise) {
    return Promise.race([promise, new Promise(function (resolve) { return setTimeout(function () { return resolve(); }, 1500); })]);
}
var IFrameManager_IFrameManager = /** @class */ (function () {
    function IFrameManager(logger) {
        this.logger = logger;
        this.messenger = new WindowMessenger_WindowMessenger();
    }
    IFrameManager.prototype.getMessenger = function () {
        return this.messenger;
    };
    IFrameManager.prototype.show = function (settings, _a) {
        var _this = this;
        var displayOnReady = _a.displayOnReady;
        var url = buildIframeUrl(settings);
        if (!this.iframe || this.iframe.src !== url) {
            return this.createIframe({ appendTo: settings.appendTo, src: url }).then(function () {
                return _this.show(settings, { displayOnReady: displayOnReady });
            });
        }
        return this.sendSettings(settings).then(function () {
            displayOnReady && _this.showIframe();
        });
    };
    IFrameManager.prototype.hide = function () {
        if (!this.iframe) {
            return;
        }
        this.messenger.emit('empty');
        this.hideIframe();
    };
    IFrameManager.prototype.kill = function () {
        if (!this.iframe || !this.iframe.parentNode) {
            return;
        }
        this.iframe.parentNode.removeChild(this.iframe);
        this.iframe = undefined;
        this.logger.log('iFrame killed');
    };
    IFrameManager.prototype.sendSettings = function (settings) {
        var _this = this;
        this.messenger.emit('settings', settings);
        return resolveAfterTimeout(new Promise(function (resolve) {
            _this.messenger.one('settingsReady', function () {
                _this.logger.log('iFrame settings are applied');
                return resolve();
            });
        }));
    };
    IFrameManager.prototype.createIframe = function (_a) {
        var _this = this;
        var _b = _a.appendTo, appendTo = _b === void 0 ? 'body' : _b, src = _a.src;
        if (this.iframe) {
            this.kill();
        }
        this.iframe = document.createElement('iframe');
        this.iframe.id = 'mediaGalleryFrame';
        this.iframe.style.border = 'none';
        this.hideIframe();
        this.iframe.src = src;
        var parent = document.querySelector(appendTo);
        if (!parent) {
            throw new Error("Cannot find element by selector '" + appendTo + "'");
        }
        parent.appendChild(this.iframe);
        this.logger.log('iFrame created', this.iframe);
        if (this.iframe.contentWindow) {
            this.messenger.setTarget(this.iframe.contentWindow);
        }
        return new Promise(function (resolve) {
            _this.messenger.one('ready', function () {
                _this.logger.log('iFrame is ready');
                resolve();
            });
        });
    };
    IFrameManager.prototype.hideIframe = function () {
        if (this.iframe) {
            this.iframe.style.display = 'none';
        }
    };
    IFrameManager.prototype.showIframe = function () {
        if (this.iframe) {
            this.iframe.style.display = 'block';
            if (this.iframe.contentWindow) {
                this.iframe.contentWindow.focus();
            }
        }
    };
    return IFrameManager;
}());


// CONCATENATED MODULE: ./IFrameManager/index.ts


// EXTERNAL MODULE: ../node_modules/is-plain-obj/index.js
var is_plain_obj = __webpack_require__(0);

// CONCATENATED MODULE: ./utils/validator.ts
function isVersionValid(value) {
    if (value === void 0) { value = ''; }
    return versionRE.test(value);
}
var versionRE = /^\d+\.\d+\.\d+$/;

// CONCATENATED MODULE: ./utils/applyOverrides/applyOverrides.ts
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var staticPathRE = /^(.*(services|_partials)\/([a-z0-9-_]+)\/)(\d+\.\d+\.\d+|<{1}%.*%{1}>)(.*)$/;
function applyOverrides(cookieString, object) {
    var overrides = getCookieOverrides(cookieString);
    return walkObject(object, function (value) {
        if (typeof value !== 'string') {
            return value;
        }
        var match = staticPathRE.exec(value);
        return match && overrides[match[3]] ? "" + match[1] + overrides[match[3]] + match[5] : value;
    });
}
function getCookieOverrides(cookieString) {
    var wixStaticsVersions = parseCookies(cookieString).wixStaticsVersions;
    if (!wixStaticsVersions) {
        return {};
    }
    return createObject(wixStaticsVersions, '|', '#', isVersionValid);
}
function parseCookies(cookieString) {
    return createObject(cookieString);
}
function createObject(str, blockSep, keyValueSep, validator) {
    if (blockSep === void 0) { blockSep = ';'; }
    if (keyValueSep === void 0) { keyValueSep = '='; }
    if (validator === void 0) { validator = function () { return true; }; }
    return str
        .split(blockSep)
        .map(function (s) { return s.trim(); })
        .map(function (s) {
        var eqlPos = s.indexOf(keyValueSep);
        return [s.slice(0, eqlPos), s.slice(eqlPos + 1)];
    })
        .reduce(function (acc, _a) {
        var _b;
        var key = _a[0], val = _a[1];
        return (validator(val, key) ? __assign({}, acc, (_b = {}, _b[key] = val, _b)) : acc);
    }, {});
}
function walkObject(obj, interceptor) {
    return Object.keys(obj).reduce(function (acc, key) {
        var _a;
        var value = obj[key];
        return __assign({}, acc, (_a = {}, _a[key] = is_plain_obj(value) ? walkObject(value, interceptor) : interceptor(value, key, obj), _a));
    }, {});
}

// CONCATENATED MODULE: ./MediaFrame/MediaFrame.ts
var MediaFrame_assign = (undefined && undefined.__assign) || function () {
    MediaFrame_assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return MediaFrame_assign.apply(this, arguments);
};




var MediaFrame_MediaFrame = /** @class */ (function () {
    function MediaFrame(defaultSettings) {
        this.defaultSettings = defaultSettings;
        this.version = "1.26.0";
        this.logger = new Logger_Logger('MediaFrame');
        this.iframeManager = new IFrameManager_IFrameManager(this.logger);
        this.messenger = this.iframeManager.getMessenger();
        this.on('close', this.close.bind(this));
        this.on('items', this.close.bind(this));
    }
    MediaFrame.prototype.on = function (event, fn) {
        this.messenger.on(event, fn);
        return this;
    };
    MediaFrame.prototype.one = function (event, fn) {
        this.messenger.one(event, fn);
        return this;
    };
    MediaFrame.prototype.off = function (event, fn) {
        this.messenger.off(event, fn);
        return this;
    };
    MediaFrame.prototype.open = function (settings) {
        settings = this.__mergeDefaultSettings(settings);
        this.logger.log('show with settings', settings);
        if (!settings.mediaGalleryBaseHost) {
            throw new Error('mediaGalleryBaseHost param is missing!');
        }
        this.iframeManager.show(settings, { displayOnReady: true });
        return this;
    };
    MediaFrame.prototype.warmup = function (settings) {
        var clonedSettings = this.__mergeDefaultSettings(MediaFrame_assign({ siteMediaToken: null }, settings, { path: 'empty' }));
        this.iframeManager.show(clonedSettings, { displayOnReady: false });
        return this;
    };
    MediaFrame.prototype.close = function () {
        this.iframeManager.hide();
        return this;
    };
    MediaFrame.prototype.kill = function () {
        this.iframeManager.kill();
    };
    MediaFrame.prototype.empty = function () {
        this.messenger.emit('empty');
        return this;
    };
    MediaFrame.prototype.__mergeDefaultSettings = function (settings) {
        settings = MediaFrame_assign({}, this.defaultSettings, settings);
        var experiments = getExperiments();
        var experimentSettings = experiments && experiments['specs.media-frame.UseMediaManagerServer'] === 'true'
            ? {
                G6: {
                    mediaGalleryBaseHost: 'https://apps.wix.com/media-manager/g6/',
                },
                G5: {
                    mediaGalleryBaseHost: 'https://apps.wix.com/media-manager/g5/',
                },
            }[settings.version || 'G6']
            : {};
        if (settings.versionDefaults && settings.version && !settings.versionDefaults.hasOwnProperty(settings.version)) {
            var supportedVersions = Object.keys(settings.versionDefaults);
            throw new Error("Invalid version. It should be one of " + supportedVersions.join(' | '));
        }
        var defaults = settings.versionDefaults && settings.version ? settings.versionDefaults[settings.version] : {};
        var settingsWithDefaults = MediaFrame_assign({}, defaults, settings, experimentSettings);
        return applyOverrides(document.cookie, settingsWithDefaults);
    };
    return MediaFrame;
}());


// CONCATENATED MODULE: ./MediaFrame/index.ts


// CONCATENATED MODULE: ./utils/noop.ts
var noop = function () { return undefined; };

// CONCATENATED MODULE: ./utils/experiments.ts
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = undefined;
var conductExperiments = function (scope) { return __awaiter(_this, void 0, Promise, function () {
    return __generator(this, function (_a) {
        return [2 /*return*/, new Promise(function (resolve, reject) {
                var xhr = new XMLHttpRequest();
                var url = "https://www.wix.com/_api/wix-laboratory-server/laboratory/conductAllInScope?scope=" + scope;
                xhr.open('GET', url, true);
                xhr.responseType = 'text';
                xhr.withCredentials = true;
                xhr.onload = function () {
                    if (xhr.status >= 200 && xhr.status < 400) {
                        resolve(JSON.parse(xhr.responseText));
                    }
                    else {
                        reject("Failed to load " + url + ", status " + xhr.status);
                    }
                };
                xhr.onerror = function () { return reject("Failed to load " + url); };
                xhr.send();
            })];
    });
}); };

// CONCATENATED MODULE: ./createMediaFrame.ts
var createMediaFrame_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var createMediaFrame_generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var createMediaFrame_this = undefined;





var runConducting = function () { return createMediaFrame_awaiter(createMediaFrame_this, void 0, void 0, function () { return createMediaFrame_generator(this, function (_a) {
    switch (_a.label) {
        case 0: return [4 /*yield*/, resolveAfterTimeout(conductExperiments('media-frame'))];
        case 1: return [2 /*return*/, _a.sent()];
    }
}); }); };
var experimentsConducted;
var getExperiments = function () { return experimentsConducted; };
runConducting().then(function (experiments) {
    experimentsConducted = experiments;
}, function (error) {
    experimentsConducted = undefined;
});
attachEnableDebugHandler();
function createMediaFrame() {
    noop("");
    noop('Media Frame Version is 1.26.0');
    /* Media Frame Version is 1.26.0 */
    return new MediaFrame_MediaFrame({
        version: 'G5',
        versionDefaults: {
            G5: {
                mediaGalleryBaseHost: "//www.wix.com/_partials/media-gallery-g5/1.594.0/",
            },
            G6: {
                mediaGalleryBaseHost: "//www.wix.com/_partials/media-manager-g6/1.688.0/",
            },
        },
    });
}

// CONCATENATED MODULE: ./index.ts
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mediaFrame", function() { return mediaFrame; });

var mediaFrame = createMediaFrame();
if (typeof window !== 'undefined' && !window.MediaFrame) {
    window.MediaFrame = mediaFrame;
}



/***/ })
/******/ ]);
